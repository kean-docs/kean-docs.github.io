{"interfaceLanguages":{"swift":[{"children":[{"title":"Essentials","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/align\/layoutitem\/anchors","title":"var anchors: LayoutAnchors<Self>","type":"property"},{"path":"\/documentation\/align\/layoutitem\/superview","title":"var superview: NSView?","type":"property"}],"path":"\/documentation\/align\/layoutitem","title":"LayoutItem","type":"protocol"},{"children":[{"title":"Edges","type":"groupMarker"},{"path":"\/documentation\/align\/layoutanchors\/top","title":"var top: Anchor<AnchorType.Edge, AnchorAxis.Vertical>","type":"property"},{"path":"\/documentation\/align\/layoutanchors\/bottom","title":"var bottom: Anchor<AnchorType.Edge, AnchorAxis.Vertical>","type":"property"},{"path":"\/documentation\/align\/layoutanchors\/left","title":"var left: Anchor<AnchorType.Edge, AnchorAxis.Horizontal>","type":"property"},{"path":"\/documentation\/align\/layoutanchors\/right","title":"var right: Anchor<AnchorType.Edge, AnchorAxis.Horizontal>","type":"property"},{"path":"\/documentation\/align\/layoutanchors\/leading","title":"var leading: Anchor<AnchorType.Edge, AnchorAxis.Horizontal>","type":"property"},{"path":"\/documentation\/align\/layoutanchors\/trailing","title":"var trailing: Anchor<AnchorType.Edge, AnchorAxis.Horizontal>","type":"property"},{"title":"Center","type":"groupMarker"},{"path":"\/documentation\/align\/layoutanchors\/centerx","title":"var centerX: Anchor<AnchorType.Center, AnchorAxis.Horizontal>","type":"property"},{"path":"\/documentation\/align\/layoutanchors\/centery","title":"var centerY: Anchor<AnchorType.Center, AnchorAxis.Vertical>","type":"property"},{"title":"Baselines","type":"groupMarker"},{"path":"\/documentation\/align\/layoutanchors\/firstbaseline","title":"var firstBaseline: Anchor<AnchorType.Baseline, AnchorAxis.Vertical>","type":"property"},{"path":"\/documentation\/align\/layoutanchors\/lastbaseline","title":"var lastBaseline: Anchor<AnchorType.Baseline, AnchorAxis.Vertical>","type":"property"},{"title":"Dimensions","type":"groupMarker"},{"path":"\/documentation\/align\/layoutanchors\/width","title":"var width: Anchor<AnchorType.Dimension, AnchorAxis.Horizontal>","type":"property"},{"path":"\/documentation\/align\/layoutanchors\/height","title":"var height: Anchor<AnchorType.Dimension, AnchorAxis.Vertical>","type":"property"},{"title":"Collections","type":"groupMarker"},{"path":"\/documentation\/align\/layoutanchors\/edges","title":"var edges: AnchorCollectionEdges","type":"property"},{"path":"\/documentation\/align\/layoutanchors\/center","title":"var center: AnchorCollectionCenter","type":"property"},{"path":"\/documentation\/align\/layoutanchors\/size","title":"var size: AnchorCollectionSize","type":"property"},{"title":"Accessing Underlying View","type":"groupMarker"},{"path":"\/documentation\/align\/layoutanchors\/item","title":"let item: T","type":"property"},{"title":"Deprecated","type":"groupMarker"},{"path":"\/documentation\/align\/layoutanchors\/base","title":"var base: T","type":"property"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/align\/layoutanchors\/init(_:)","title":"init(T)","type":"init"}],"path":"\/documentation\/align\/layoutanchors","title":"LayoutAnchors","type":"struct"},{"children":[{"title":"Core Constraints for Edges and Center","type":"groupMarker"},{"path":"\/documentation\/align\/anchor\/equal(_:constant:)-9a08m","title":"func equal<Type>(Anchor<Type, Axis>, constant: CGFloat) -> NSLayoutConstraint","type":"method"},{"path":"\/documentation\/align\/anchor\/greaterthanorequal(_:constant:)-3ths2","title":"func greaterThanOrEqual<Type>(Anchor<Type, Axis>, constant: CGFloat) -> NSLayoutConstraint","type":"method"},{"path":"\/documentation\/align\/anchor\/lessthanorequal(_:constant:)-9nco3","title":"func lessThanOrEqual<Type>(Anchor<Type, Axis>, constant: CGFloat) -> NSLayoutConstraint","type":"method"},{"title":"Core Constraints for Dimensions","type":"groupMarker"},{"path":"\/documentation\/align\/anchor\/equal(_:)","title":"func equal(CGFloat) -> NSLayoutConstraint","type":"method"},{"path":"\/documentation\/align\/anchor\/greaterthanorequal(_:)","title":"func greaterThanOrEqual(CGFloat) -> NSLayoutConstraint","type":"method"},{"path":"\/documentation\/align\/anchor\/lessthanorequal(_:)","title":"func lessThanOrEqual(CGFloat) -> NSLayoutConstraint","type":"method"},{"path":"\/documentation\/align\/anchor\/equal(_:constant:)-88kx7","title":"func equal<Type, Axis>(Anchor<Type, Axis>, constant: CGFloat) -> NSLayoutConstraint","type":"method"},{"path":"\/documentation\/align\/anchor\/greaterthanorequal(_:constant:)-6c6e9","title":"func greaterThanOrEqual<Type, Axis>(Anchor<Type, Axis>, constant: CGFloat) -> NSLayoutConstraint","type":"method"},{"path":"\/documentation\/align\/anchor\/lessthanorequal(_:constant:)-9dk3k","title":"func lessThanOrEqual<Type, Axis>(Anchor<Type, Axis>, constant: CGFloat) -> NSLayoutConstraint","type":"method"},{"title":"Core Constraints","type":"groupMarker"},{"path":"\/documentation\/align\/anchor\/offsetting(by:)","title":"func offsetting(by: CGFloat) -> Anchor","type":"method"},{"path":"\/documentation\/align\/anchor\/multiplied(by:)","title":"func multiplied(by: CGFloat) -> Anchor","type":"method"},{"title":"Semantic Constraints for Edges","type":"groupMarker"},{"path":"\/documentation\/align\/anchor\/pin(to:inset:)","title":"func pin(to: LayoutItem?, inset: CGFloat) -> NSLayoutConstraint","type":"method"},{"path":"\/documentation\/align\/anchor\/spacing(_:to:relation:)","title":"func spacing<Type>(CGFloat, to: Anchor<Type, Axis>, relation: NSLayoutConstraint.Relation) -> NSLayoutConstraint","type":"method"},{"title":"Semantic Constraints for Dimensions","type":"groupMarker"},{"path":"\/documentation\/align\/anchor\/clamp(to:)","title":"func clamp(to: ClosedRange<CGFloat>) -> [NSLayoutConstraint]","type":"method"},{"title":"Semantic Constraints for Center","type":"groupMarker"},{"path":"\/documentation\/align\/anchor\/align(offset:)","title":"func align(offset: CGFloat) -> NSLayoutConstraint","type":"method"},{"title":"Anchor Parameters","type":"groupMarker"},{"children":[{"title":"Classes","type":"groupMarker"},{"path":"\/documentation\/align\/anchoraxis\/horizontal","title":"AnchorAxis.Horizontal","type":"class"},{"path":"\/documentation\/align\/anchoraxis\/vertical","title":"AnchorAxis.Vertical","type":"class"}],"path":"\/documentation\/align\/anchoraxis","title":"AnchorAxis","type":"enum"},{"children":[{"title":"Classes","type":"groupMarker"},{"path":"\/documentation\/align\/anchortype\/alignment","title":"AnchorType.Alignment","type":"class"},{"path":"\/documentation\/align\/anchortype\/baseline","title":"AnchorType.Baseline","type":"class"},{"path":"\/documentation\/align\/anchortype\/center","title":"AnchorType.Center","type":"class"},{"path":"\/documentation\/align\/anchortype\/dimension","title":"AnchorType.Dimension","type":"class"},{"path":"\/documentation\/align\/anchortype\/edge","title":"AnchorType.Edge","type":"class"}],"path":"\/documentation\/align\/anchortype","title":"AnchorType","type":"enum"}],"path":"\/documentation\/align\/anchor","title":"Anchor","type":"struct"},{"title":"Manipulating Multiple Anchors","type":"groupMarker"},{"children":[{"title":"Core Constraints","type":"groupMarker"},{"path":"\/documentation\/align\/anchorcollectionedges\/equal(_:insets:)-69yv2","title":"func equal(LayoutItem, insets: CGFloat) -> [NSLayoutConstraint]","type":"method"},{"path":"\/documentation\/align\/anchorcollectionedges\/equal(_:insets:)-789w8","title":"func equal(LayoutItem, insets: EdgeInsets) -> [NSLayoutConstraint]","type":"method"},{"path":"\/documentation\/align\/anchorcollectionedges\/lessthanorequal(_:insets:)-a9x4","title":"func lessThanOrEqual(LayoutItem, insets: CGFloat) -> [NSLayoutConstraint]","type":"method"},{"path":"\/documentation\/align\/anchorcollectionedges\/lessthanorequal(_:insets:)-ty0q","title":"func lessThanOrEqual(LayoutItem, insets: EdgeInsets) -> [NSLayoutConstraint]","type":"method"},{"title":"Semantic Constraints","type":"groupMarker"},{"path":"\/documentation\/align\/anchorcollectionedges\/pin(to:insets:axis:alignment:)-74nhn","title":"func pin(to: LayoutItem?, insets: CGFloat, axis: Axis?, alignment: Alignment) -> [NSLayoutConstraint]","type":"method"},{"path":"\/documentation\/align\/anchorcollectionedges\/pin(to:insets:axis:alignment:)-2uvy8","title":"func pin(to: LayoutItem?, insets: EdgeInsets, axis: Axis?, alignment: Alignment) -> [NSLayoutConstraint]","type":"method"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/align\/anchorcollectionedges\/absolute()","title":"func absolute() -> AnchorCollectionEdges","type":"method"},{"title":"Nested Types","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/align\/anchorcollectionedges\/alignment\/init(horizontal:vertical:)","title":"init(horizontal: Horizontal, vertical: Vertical)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/align\/anchorcollectionedges\/alignment\/horizontal-swift.property","title":"let horizontal: Horizontal","type":"property"},{"path":"\/documentation\/align\/anchorcollectionedges\/alignment\/vertical-swift.property","title":"let vertical: Vertical","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/align\/anchorcollectionedges\/alignment\/bottom","title":"static let bottom: AnchorCollectionEdges.Alignment","type":"property"},{"path":"\/documentation\/align\/anchorcollectionedges\/alignment\/bottomleading","title":"static let bottomLeading: AnchorCollectionEdges.Alignment","type":"property"},{"path":"\/documentation\/align\/anchorcollectionedges\/alignment\/bottomtrailing","title":"static let bottomTrailing: AnchorCollectionEdges.Alignment","type":"property"},{"path":"\/documentation\/align\/anchorcollectionedges\/alignment\/center","title":"static let center: AnchorCollectionEdges.Alignment","type":"property"},{"path":"\/documentation\/align\/anchorcollectionedges\/alignment\/fill","title":"static let fill: AnchorCollectionEdges.Alignment","type":"property"},{"path":"\/documentation\/align\/anchorcollectionedges\/alignment\/leading","title":"static let leading: AnchorCollectionEdges.Alignment","type":"property"},{"path":"\/documentation\/align\/anchorcollectionedges\/alignment\/top","title":"static let top: AnchorCollectionEdges.Alignment","type":"property"},{"path":"\/documentation\/align\/anchorcollectionedges\/alignment\/topleading","title":"static let topLeading: AnchorCollectionEdges.Alignment","type":"property"},{"path":"\/documentation\/align\/anchorcollectionedges\/alignment\/toptrailing","title":"static let topTrailing: AnchorCollectionEdges.Alignment","type":"property"},{"path":"\/documentation\/align\/anchorcollectionedges\/alignment\/trailing","title":"static let trailing: AnchorCollectionEdges.Alignment","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/align\/anchorcollectionedges\/alignment\/horizontal-swift.enum\/center","title":"case center","type":"case"},{"path":"\/documentation\/align\/anchorcollectionedges\/alignment\/horizontal-swift.enum\/fill","title":"case fill","type":"case"},{"path":"\/documentation\/align\/anchorcollectionedges\/alignment\/horizontal-swift.enum\/leading","title":"case leading","type":"case"},{"path":"\/documentation\/align\/anchorcollectionedges\/alignment\/horizontal-swift.enum\/trailing","title":"case trailing","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/align\/anchorcollectionedges\/alignment\/horizontal-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/align\/anchorcollectionedges\/alignment\/horizontal-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/align\/anchorcollectionedges\/alignment\/horizontal-swift.enum","title":"AnchorCollectionEdges.Alignment.Horizontal","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/align\/anchorcollectionedges\/alignment\/vertical-swift.enum\/bottom","title":"case bottom","type":"case"},{"path":"\/documentation\/align\/anchorcollectionedges\/alignment\/vertical-swift.enum\/center","title":"case center","type":"case"},{"path":"\/documentation\/align\/anchorcollectionedges\/alignment\/vertical-swift.enum\/fill","title":"case fill","type":"case"},{"path":"\/documentation\/align\/anchorcollectionedges\/alignment\/vertical-swift.enum\/top","title":"case top","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/align\/anchorcollectionedges\/alignment\/vertical-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/align\/anchorcollectionedges\/alignment\/vertical-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/align\/anchorcollectionedges\/alignment\/vertical-swift.enum","title":"AnchorCollectionEdges.Alignment.Vertical","type":"enum"}],"path":"\/documentation\/align\/anchorcollectionedges\/alignment","title":"AnchorCollectionEdges.Alignment","type":"struct"},{"path":"\/documentation\/align\/anchorcollectionedges\/axis","title":"AnchorCollectionEdges.Axis","type":"typealias"}],"path":"\/documentation\/align\/anchorcollectionedges","title":"AnchorCollectionEdges","type":"struct"},{"children":[{"title":"Core Constraints","type":"groupMarker"},{"path":"\/documentation\/align\/anchorcollectioncenter\/equal(_:offset:)","title":"func equal<Item>(Item, offset: CGPoint) -> [NSLayoutConstraint]","type":"method"},{"path":"\/documentation\/align\/anchorcollectioncenter\/lessthanorequal(_:offset:)","title":"func lessThanOrEqual<Item>(Item, offset: CGPoint) -> [NSLayoutConstraint]","type":"method"},{"path":"\/documentation\/align\/anchorcollectioncenter\/greaterthanorequal(_:offset:)","title":"func greaterThanOrEqual<Item>(Item, offset: CGPoint) -> [NSLayoutConstraint]","type":"method"},{"title":"Semantic Constraints","type":"groupMarker"},{"path":"\/documentation\/align\/anchorcollectioncenter\/align()","title":"func align() -> [NSLayoutConstraint]","type":"method"},{"path":"\/documentation\/align\/anchorcollectioncenter\/align(with:)","title":"func align<Item>(with: Item) -> [NSLayoutConstraint]","type":"method"}],"path":"\/documentation\/align\/anchorcollectioncenter","title":"AnchorCollectionCenter","type":"struct"},{"children":[{"title":"Core Constraints","type":"groupMarker"},{"path":"\/documentation\/align\/anchorcollectionsize\/equal(_:)","title":"func equal(CGSize) -> [NSLayoutConstraint]","type":"method"},{"path":"\/documentation\/align\/anchorcollectionsize\/equal(_:insets:multiplier:)","title":"func equal<Item>(Item, insets: CGSize, multiplier: CGFloat) -> [NSLayoutConstraint]","type":"method"},{"path":"\/documentation\/align\/anchorcollectionsize\/lessthanorequal(_:)","title":"func lessThanOrEqual(CGSize) -> [NSLayoutConstraint]","type":"method"},{"path":"\/documentation\/align\/anchorcollectionsize\/lessthanorequal(_:insets:multiplier:)","title":"func lessThanOrEqual<Item>(Item, insets: CGSize, multiplier: CGFloat) -> [NSLayoutConstraint]","type":"method"},{"path":"\/documentation\/align\/anchorcollectionsize\/greaterthanorequl(_:)","title":"func greaterThanOrEqul(CGSize) -> [NSLayoutConstraint]","type":"method"},{"path":"\/documentation\/align\/anchorcollectionsize\/greaterthanorequal(_:insets:multiplier:)","title":"func greaterThanOrEqual<Item>(Item, insets: CGSize, multiplier: CGFloat) -> [NSLayoutConstraint]","type":"method"}],"path":"\/documentation\/align\/anchorcollectionsize","title":"AnchorCollectionSize","type":"struct"},{"title":"Managing Constraints","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/align\/constraints\/init(activate:_:)","title":"init(activate: Bool, () -> Void)","type":"init"},{"title":"Variadic Initializers","type":"groupMarker"},{"path":"\/documentation\/align\/constraints\/init(for:_:)","title":"init<A>(for: A, (LayoutAnchors<A>) -> Void)","type":"init"},{"path":"\/documentation\/align\/constraints\/init(for:_:_:)","title":"init<A, B>(for: A, B, (LayoutAnchors<A>, LayoutAnchors<B>) -> Void)","type":"init"},{"path":"\/documentation\/align\/constraints\/init(for:_:_:_:)","title":"init<A, B, C>(for: A, B, C, (LayoutAnchors<A>, LayoutAnchors<B>, LayoutAnchors<C>) -> Void)","type":"init"},{"path":"\/documentation\/align\/constraints\/init(for:_:_:_:_:)","title":"init<A, B, C, D>(for: A, B, C, D, (LayoutAnchors<A>, LayoutAnchors<B>, LayoutAnchors<C>, LayoutAnchors<D>) -> Void)","type":"init"},{"title":"Accessing Underlying Constraints","type":"groupMarker"},{"path":"\/documentation\/align\/constraints\/constraints","title":"var constraints: [NSLayoutConstraint]","type":"property"},{"path":"\/documentation\/align\/constraints\/activate()","title":"func activate()","type":"method"},{"path":"\/documentation\/align\/constraints\/deactivate()","title":"func deactivate()","type":"method"},{"title":"Collection Conformance","type":"groupMarker"},{"path":"\/documentation\/align\/constraints\/startindex","title":"var startIndex: Int","type":"property"},{"path":"\/documentation\/align\/constraints\/endindex","title":"var endIndex: Int","type":"property"},{"path":"\/documentation\/align\/constraints\/index(after:)","title":"func index(after: Int) -> Int","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/align\/constraints\/subscript(_:)-3es4o","title":"subscript(Int) -> NSLayoutConstraint","type":"subscript"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/align\/constraints\/element","title":"Constraints.Element","type":"typealias"},{"path":"\/documentation\/align\/constraints\/index","title":"Constraints.Index","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/align\/constraints\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/align\/constraints\/first","title":"var first: Self.Element?","type":"property"},{"path":"\/documentation\/align\/constraints\/indices","title":"var indices: DefaultIndices<Self>","type":"property"},{"path":"\/documentation\/align\/constraints\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/align\/constraints\/underestimatedcount-4xj9l","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/align\/constraints\/distance(from:to:)","title":"func distance(from: Self.Index, to: Self.Index) -> Int","type":"method"},{"path":"\/documentation\/align\/constraints\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/align\/constraints\/dropfirst(_:)","title":"func dropFirst(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/align\/constraints\/droplast(_:)","title":"func dropLast(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/align\/constraints\/firstindex(of:)","title":"func firstIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/align\/constraints\/firstindex(where:)","title":"func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/align\/constraints\/firstrange(of:)","title":"func firstRange<C>(of: C) -> Range<Self.Index>?","type":"method"},{"path":"\/documentation\/align\/constraints\/formindex(_:offsetby:)","title":"func formIndex(inout Self.Index, offsetBy: Int)","type":"method"},{"path":"\/documentation\/align\/constraints\/formindex(_:offsetby:limitedby:)","title":"func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool","type":"method"},{"path":"\/documentation\/align\/constraints\/formindex(after:)","title":"func formIndex(after: inout Self.Index)","type":"method"},{"path":"\/documentation\/align\/constraints\/index(_:offsetby:)","title":"func index(Self.Index, offsetBy: Int) -> Self.Index","type":"method"},{"path":"\/documentation\/align\/constraints\/index(_:offsetby:limitedby:)","title":"func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?","type":"method"},{"path":"\/documentation\/align\/constraints\/index(of:)","title":"func index(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/align\/constraints\/makeiterator()","title":"func makeIterator() -> IndexingIterator<Self>","type":"method"},{"path":"\/documentation\/align\/constraints\/map(_:)-8q7gz","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/align\/constraints\/prefix(_:)","title":"func prefix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/align\/constraints\/prefix(through:)","title":"func prefix(through: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/align\/constraints\/prefix(upto:)","title":"func prefix(upTo: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/align\/constraints\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/align\/constraints\/randomelement()","title":"func randomElement() -> Self.Element?","type":"method"},{"path":"\/documentation\/align\/constraints\/randomelement(using:)","title":"func randomElement<T>(using: inout T) -> Self.Element?","type":"method"},{"path":"\/documentation\/align\/constraints\/ranges(of:)","title":"func ranges<C>(of: C) -> [Range<Self.Index>]","type":"method"},{"path":"\/documentation\/align\/constraints\/split(by:)","title":"func split<C>(by: C) -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/align\/constraints\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/align\/constraints\/split(separator:maxsplits:omittingemptysubsequences:)","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/align\/constraints\/suffix(_:)","title":"func suffix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/align\/constraints\/suffix(from:)","title":"func suffix(from: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/align\/constraints\/trimmingprefix(_:)","title":"func trimmingPrefix<Prefix>(Prefix) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/align\/constraints\/trimmingprefix(while:)","title":"func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/align\/constraints\/subscript(_:)-308sj","title":"subscript<R>(R) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/align\/constraints\/subscript(_:)-4436p","title":"subscript(Range<Self.Index>) -> Slice<Self>","type":"subscript"},{"path":"\/documentation\/align\/constraints\/subscript(_:)-6s0ix","title":"subscript((UnboundedRange_) -> ()) -> Self.SubSequence","type":"subscript"}],"path":"\/documentation\/align\/constraints\/collection-implementations","title":"Collection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/align\/constraints\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/align\/constraints\/publisher","title":"var publisher: Publishers.Sequence<Self, Never>","type":"property"},{"path":"\/documentation\/align\/constraints\/underestimatedcount-6hi2","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/align\/constraints\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/align\/constraints\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/align\/constraints\/compare(_:_:)","title":"func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult","type":"method"},{"path":"\/documentation\/align\/constraints\/contains(_:)","title":"func contains(Self.Element) -> Bool","type":"method"},{"path":"\/documentation\/align\/constraints\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/align\/constraints\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/align\/constraints\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/align\/constraints\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/align\/constraints\/filter(_:)","title":"func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/align\/constraints\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/align\/constraints\/flatmap(_:)-7f0sd","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/align\/constraints\/flatmap(_:)-9myah","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/align\/constraints\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/align\/constraints\/formatted(_:)","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/align\/constraints\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/align\/constraints\/map(_:)-5aych","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/align\/constraints\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/align\/constraints\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/align\/constraints\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/align\/constraints\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/align\/constraints\/reversed()","title":"func reversed() -> [Self.Element]","type":"method"},{"path":"\/documentation\/align\/constraints\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/align\/constraints\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/align\/constraints\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/align\/constraints\/sorted(using:)-3rcgn","title":"func sorted<S, Comparator>(using: S) -> [Self.Element]","type":"method"},{"path":"\/documentation\/align\/constraints\/sorted(using:)-85u5r","title":"func sorted<Comparator>(using: Comparator) -> [Self.Element]","type":"method"},{"path":"\/documentation\/align\/constraints\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/align\/constraints\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/align\/constraints\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/align\/constraints\/sequence-implementations","title":"Sequence Implementations","type":"symbol"}],"path":"\/documentation\/align\/constraints","title":"Constraints","type":"class"},{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/align\/*(_:_:)","title":"func * <Type, Axis>(Anchor<Type, Axis>, CGFloat) -> Anchor<Type, Axis>","type":"op"},{"path":"\/documentation\/align\/+(_:_:)","title":"func + <Type, Axis>(Anchor<Type, Axis>, CGFloat) -> Anchor<Type, Axis>","type":"op"},{"path":"\/documentation\/align\/-(_:_:)","title":"func - <Type, Axis>(Anchor<Type, Axis>, CGFloat) -> Anchor<Type, Axis>","type":"op"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/align\/edgeinsets","title":"EdgeInsets","type":"typealias"}],"path":"\/documentation\/align","title":"Align","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":0}}