{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"For smaller apps or one-off requests, using "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Get\/documentation\/Get\/APIClient"},{"type":"text","text":" directly without creating an API definition can be acceptable. For example:"}]},{"type":"codeListing","syntax":"swift","code":["try await client.send(.post(\"\/user\/emails\", body: [\"kean@example.com\"]))"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"But it is generally a good idea to define all the available APIs in one place to reduce the clutter in the rest of the codebase and eliminate duplication. The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Get\/documentation\/Get\/Request"},{"type":"text","text":" struct is perfectly suited for this. It defines the relative or the absolute URL, the request parameters, and, importantly, the expected response type."}]},{"type":"aside","style":"important","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"There are many suggestions online to model APIs using enums. This approach might make your code harder to read and modify and lead to merge conflicts. When you add a new call, you should only need to make changes in one place."}]}]},{"anchor":"Modeling-REST-APIs","level":2,"type":"heading","text":"Modeling REST APIs"},{"type":"paragraph","inlineContent":[{"type":"text","text":"REST APIs are "},{"type":"reference","isActive":true,"identifier":"https:\/\/docs.microsoft.com\/en-us\/azure\/architecture\/best-practices\/api-design"},{"type":"text","text":" around resources. Naturally, you can use nested types to represent nested resources to create a structure that mimics that of the API."}]},{"type":"codeListing","syntax":"swift","code":["enum API {}","","extension API {","    static func users(_ name: String) -> UsersResource {","        UsersResource(path: \"\/users\/\\(name)\")","    }","","    struct UsersResource {","        \/\/\/ `\/users\/{username}`","        let path: String","","        \/\/\/ Get the profile of the selected user.","        var get: Request<User> { .get(path) }","    ","        \/\/\/ Access the repos belonging to the user.","        var repos: ReposResource { ReposResource(path: path + \"\/repos\") }","    }","}","","extension API.UsersResource {","    struct ReposResource {","        \/\/\/ `\/users\/{username}\/repos`","        let path: String","","        \/\/\/ Get the list of the repos belonging to the user.","        var get: Request<[Repo]> { .get(path) }","    }","}","","struct Repo: Decodable {}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Usage:"}]},{"type":"codeListing","syntax":"swift","code":["let response = try await client.send(API.users(\"kean\").repos.get)"]},{"type":"aside","style":"tip","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This API is visually appealing, but it can be a bit tedious to write. With "},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/kean\/CreateAPI"},{"type":"text","text":", you can take your backend OpenAPI spec, and generate all of the response entities and even requests for "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Get\/documentation\/Get\/APIClient"},{"type":"text","text":"."}]}]},{"anchor":"Modeling-APIs-as-Operations","level":2,"type":"heading","text":"Modeling APIs as Operations"},{"type":"paragraph","inlineContent":[{"type":"text","text":"For APIs that donâ€™t follow REST API design, there are other ways to define APIs. For example, you can simply list all of the available operations."}]},{"type":"codeListing","syntax":"swift","code":["enum API {","    static func getReposForUser(named name: String) -> Request<User> {","        .get(\"\/users\/\\(name)\/repos\")","    }","}","","struct User: Decodable {}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Usage:"}]},{"type":"codeListing","syntax":"swift","code":["let repos = try await client.send(API.getReposForUser(named: \"kean\")"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/get\/define-api"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Get\/documentation\/Get\/define-api","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Learn how to define an API using "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Get\/documentation\/Get\/Request"},{"type":"text","text":" type."}],"kind":"article","metadata":{"roleHeading":"Article","title":"Modeling APIs","role":"article","modules":[{"name":"Get"}]},"hierarchy":{"paths":[["doc:\/\/Get\/documentation\/Get"]]},"seeAlsoSections":[{"title":"Articles","identifiers":["doc:\/\/Get\/documentation\/Get\/authentication","doc:\/\/Get\/documentation\/Get\/caching","doc:\/\/Get\/documentation\/Get\/integrations"],"generated":true}],"references":{"doc://Get/documentation/Get":{"role":"collection","title":"Get","abstract":[{"type":"text","text":"A lean Swift web API client built using async\/await."}],"identifier":"doc:\/\/Get\/documentation\/Get","kind":"symbol","type":"topic","url":"\/documentation\/get"},"doc://Get/documentation/Get/Request":{"role":"symbol","title":"Request","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Request"}],"abstract":[{"type":"text","text":"An HTTP network request."}],"identifier":"doc:\/\/Get\/documentation\/Get\/Request","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Request"}],"url":"\/documentation\/get\/request"},"doc://Get/documentation/Get/APIClient":{"role":"symbol","title":"APIClient","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"APIClient"}],"abstract":[{"type":"text","text":"Performs network requests constructed using "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Get\/documentation\/Get\/Request"},{"type":"text","text":"."}],"identifier":"doc:\/\/Get\/documentation\/Get\/APIClient","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"APIClient"}],"url":"\/documentation\/get\/apiclient"},"https://github.com/kean/CreateAPI":{"title":"CreateAPI","titleInlineContent":[{"type":"text","text":"CreateAPI"}],"type":"link","identifier":"https:\/\/github.com\/kean\/CreateAPI","url":"https:\/\/github.com\/kean\/CreateAPI"},"doc://Get/documentation/Get/authentication":{"role":"article","title":"Authentication","abstract":[{"type":"text","text":"Learn how to implement authentication."}],"identifier":"doc:\/\/Get\/documentation\/Get\/authentication","kind":"article","type":"topic","url":"\/documentation\/get\/authentication"},"https://docs.microsoft.com/en-us/azure/architecture/best-practices/api-design":{"title":"designed","titleInlineContent":[{"type":"text","text":"designed"}],"type":"link","identifier":"https:\/\/docs.microsoft.com\/en-us\/azure\/architecture\/best-practices\/api-design","url":"https:\/\/docs.microsoft.com\/en-us\/azure\/architecture\/best-practices\/api-design"},"doc://Get/documentation/Get/caching":{"role":"article","title":"Caching","abstract":[{"type":"text","text":"Learn how the framework caches data."}],"identifier":"doc:\/\/Get\/documentation\/Get\/caching","kind":"article","type":"topic","url":"\/documentation\/get\/caching"},"doc://Get/documentation/Get/integrations":{"role":"article","title":"Integrations","abstract":[{"type":"text","text":"Learn how to extend "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Get\/documentation\/Get\/APIClient"},{"type":"text","text":" using third-party frameworks."}],"identifier":"doc:\/\/Get\/documentation\/Get\/integrations","kind":"article","type":"topic","url":"\/documentation\/get\/integrations"}}}