{"primaryContentSections":[{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Nuke is capable of driving progressive decoding, animated image rendering, progressive animated image rendering, drawing vector images directly or converting them to bitmaps, parsing thumbnails included in the image containers, and more."}]},{"anchor":"Common-Image-Formats","level":3,"type":"heading","text":"Common Image Formats"},{"type":"paragraph","inlineContent":[{"type":"text","text":"All images format "},{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/library\/archive\/documentation\/2DDrawing\/Conceptual\/DrawingPrintingiOS\/LoadingImages\/LoadingImages.html#\/\/apple_ref\/doc\/uid\/TP40010156-CH17-SW7"},{"type":"text","text":" by the platform are also supported by Nuke, including "},{"type":"codeVoice","code":"PNG"},{"type":"text","text":", "},{"type":"codeVoice","code":"TIFF"},{"type":"text","text":", "},{"type":"codeVoice","code":"JPEG"},{"type":"text","text":", "},{"type":"codeVoice","code":"GIF"},{"type":"text","text":", "},{"type":"codeVoice","code":"BMP"},{"type":"text","text":", "},{"type":"codeVoice","code":"ICO"},{"type":"text","text":", "},{"type":"codeVoice","code":"CUR"},{"type":"text","text":", and "},{"type":"codeVoice","code":"XBM"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can use the basic "},{"type":"codeVoice","code":"UIImageView"},{"type":"text","text":"\/"},{"type":"codeVoice","code":"NSImageView"},{"type":"text","text":"\/"},{"type":"codeVoice","code":"WKInterfaceImage"},{"type":"text","text":" to render the images of any of the natively supported formats."}]},{"anchor":"Progressive-JPEG","level":3,"type":"heading","text":"Progressive JPEG"},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Decoding"}]}]},{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/com.github.kean.nuke\/documentation\/Nuke\/ImageDecoders\/Default"},{"type":"text","text":" supports progressive JPEG. The decoder automatically detects when there are new scans available and produces new previews."}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Encoding"}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"None."}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Rendering"}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To render the progressive JPEG, you can use the basic "},{"type":"codeVoice","code":"UIImageView"},{"type":"text","text":"\/"},{"type":"codeVoice","code":"NSImageView"},{"type":"text","text":"\/"},{"type":"codeVoice","code":"WKInterfaceImage"},{"type":"text","text":". The default image view loading extensions also supports displaying progressive scans."}]},{"anchor":"HEIF","level":3,"type":"heading","text":"HEIF"},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Decoding"}]}]},{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/com.github.kean.nuke\/documentation\/Nuke\/ImageDecoders\/Default"},{"type":"text","text":" supports "},{"type":"reference","isActive":true,"identifier":"https:\/\/en.wikipedia.org\/wiki\/High_Efficiency_Image_File_Format"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Encoding"}]}]},{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/com.github.kean.nuke\/documentation\/Nuke\/ImageEncoders\/Default"},{"type":"text","text":" supports "},{"overridingTitleInlineContent":[{"type":"text","text":"HEIF"}],"isActive":true,"type":"reference","identifier":"https:\/\/en.wikipedia.org\/wiki\/High_Efficiency_Image_File_Format","overridingTitle":"HEIF"},{"type":"text","text":" but doesnâ€™t use it by default. To enable it, use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.github.kean.nuke\/documentation\/Nuke\/ImageEncoders\/Default\/isHEIFPreferred"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.github.kean.nuke\/documentation\/Nuke\/ImageEncoders\/ImageIO"},{"type":"text","text":" directly:"}]},{"type":"codeListing","syntax":"swift","code":["let image: UIImage","let encoder = ImageEncoders.ImageIO(type: .heif, compressionRatio: 0.8)","let data = encoder.encode(image: image)"]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Rendering"}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To render HEIF images, you can use "},{"type":"codeVoice","code":"UIImageView"},{"type":"text","text":"\/"},{"type":"codeVoice","code":"NSImageView"},{"type":"text","text":"\/"},{"type":"codeVoice","code":"WKInterfaceImage"},{"type":"text","text":"."}]},{"anchor":"GIF","level":3,"type":"heading","text":"GIF"},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Decoding"}]}]},{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/com.github.kean.nuke\/documentation\/Nuke\/ImageDecoders\/Default"},{"type":"text","text":" automatically recognizes GIFs. It creates an image container ("},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.github.kean.nuke\/documentation\/Nuke\/ImageContainer"},{"type":"text","text":") with the first frame of the GIF as a placeholder and attaches the original image data to the container so that you can perform just-in-time decoding at rendering time."}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Encoding"}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"None."}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Rendering"}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To render animated GIFs, please consider using one of the open-source GIF rendering engines, like "},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/kaishin\/Gifu"},{"type":"text","text":", "},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/Flipboard\/FLAnimatedImage"},{"type":"text","text":", or other."}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Gifu Example"}]}]},{"type":"codeListing","syntax":"swift","code":["\/\/\/ A custom image view that supports downloading and displaying animated images.","final class ImageView: UIView {","    private let imageView: GIFImageView","    private let spinner: UIActivityIndicatorView","    private var task: ImageTask?","","    \/* Initializers skipped *\/","","    func setImage(with url: URL) {","        prepareForReuse()","","        if let response = ImagePipeline.shared.cache[url] {","            imageView.display(response: response)","            if !response.isPreview {","                return ","            }","        }","","        spinner.startAnimating()","        task = ImagePipeline.shared.loadImage(with: url) { [weak self] result in","            self?.spinner.stopAnimating()","            if case let .success(response) = result {","                self?.imageView.display(response: response)","            }","        }","    }","    ","    private func display(response: ImageResponse) {","        if let data = response.container.data {","            animate(withGIFData: data)","        } else {","            image = response.image","        }","    }","    ","    private func prepareForReuse() {","        task?.cancel()","        spinner.stopAnimating()","        imageView.prepareForReuse()","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To see this code in action, check out the "},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/kean\/NukeDemo"},{"type":"text","text":"."}]},{"type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"GIF"},{"type":"text","text":" is not the most efficient format for transferring and displaying animated images. Consider using "},{"type":"reference","isActive":true,"identifier":"https:\/\/developers.google.com\/web\/fundamentals\/performance\/optimizing-content-efficiency\/replace-animated-gifs-with-video\/"},{"type":"text","text":". You can find a PoC available in the "},{"overridingTitleInlineContent":[{"type":"text","text":"demo project"}],"isActive":true,"type":"reference","identifier":"https:\/\/github.com\/kean\/NukeDemo","overridingTitle":"demo project"},{"type":"text","text":" that uses Nuke to load, cache and display an "},{"type":"codeVoice","code":"MP4"},{"type":"text","text":" video."}]}]},{"anchor":"SVG","level":3,"type":"heading","text":"SVG"},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Decoding"}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"There is currently no built-in support for SVG. Use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.github.kean.nuke\/documentation\/Nuke\/ImageDecoders\/Empty"},{"type":"text","text":" to pass the original image data to an SVG-enabled view and render is using an external mechanism."}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Encoding"}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"None."}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Rendering"}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To render SVG, consider using "},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/mchoe\/SwiftSVG"},{"type":"text","text":", "},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/SVGKit\/SVGKit"},{"type":"text","text":", or other frameworks. Here is an example of "},{"type":"codeVoice","code":"SwiftSVG"},{"type":"text","text":" rendering vector images."}]},{"type":"codeListing","syntax":"swift","code":["ImageDecoderRegistry.shared.register { context in","    \/\/ Replace this with whatever works for you. There are no magic numbers","    \/\/ for SVG like are used for other binary formats, it's just XML.","    let isSVG = context.urlResponse?.url?.absoluteString.hasSuffix(\".svg\") ?? false","    return isSVG ? ImageDecoders.Empty() : nil","}","","let url = URL(string: \"https:\/\/upload.wikimedia.org\/wikipedia\/commons\/9\/9d\/Swift_logo.svg\")","ImagePipeline.shared.loadImage(with: url) { [weak self] result in","    guard let self = self, let data = try? result.get().container.data else {","        return","    }","    \/\/ You can render image using whatever size you want, vector!","    let targetBounds = CGRect(origin: .zero, size: CGSize(width: 300, height: 300))","    let svgView = UIView(SVGData: data) { layer in","        layer.fillColor = UIColor.orange.cgColor","        layer.resizeToFit(targetBounds)","    }","    self.view.addSubview(svgView)","    svgView.bounds = targetBounds","    svgView.center = self.view.center","}"]},{"type":"aside","style":"important","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Both "},{"overridingTitleInlineContent":[{"type":"text","text":"SwiftSVG"}],"isActive":true,"type":"reference","identifier":"https:\/\/github.com\/mchoe\/SwiftSVG","overridingTitle":"SwiftSVG"},{"type":"text","text":" and "},{"overridingTitleInlineContent":[{"type":"text","text":"SVG"}],"isActive":true,"type":"reference","identifier":"https:\/\/github.com\/SVGKit\/SVGKit","overridingTitle":"SVG"},{"type":"text","text":" only support a subset of SVG features."}]}]},{"anchor":"WebP","level":3,"type":"heading","text":"WebP"},{"anchor":"Third-party-Support","level":4,"type":"heading","text":"Third-party Support"},{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"https:\/\/developers.google.com\/speed\/webp"},{"type":"text","text":" support is provided by "},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/ryokosuge\/Nuke-WebP-Plugin"},{"type":"text","text":" built by "},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/ryokosuge"},{"type":"text","text":". Please follow the instructions from the repo."}]},{"anchor":"Native-Support-macOS-11-iOS-14-watchOS-7","level":4,"type":"heading","text":"Native Support (macOS 11, iOS 14, watchOS 7)"},{"type":"paragraph","inlineContent":[{"type":"text","text":"WebP is now supported natively. Nuke currently only supports baseline WebP (no progressive WebP support)."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/nuke\/supported-image-formats"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/com.github.kean.nuke\/documentation\/Nuke\/supported-image-formats","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Nuke has built-in support for basic image formats like "},{"type":"codeVoice","code":"jpeg"},{"type":"text","text":", "},{"type":"codeVoice","code":"png"},{"type":"text","text":", and "},{"type":"codeVoice","code":"heif"},{"type":"text","text":". It also has the infrastructure for supporting a variety of custom image formats."}],"kind":"article","metadata":{"roleHeading":"Article","title":"Supported Formats","role":"article","modules":[{"name":"Nuke"}]},"hierarchy":{"paths":[["doc:\/\/com.github.kean.nuke\/documentation\/Nuke","doc:\/\/com.github.kean.nuke\/documentation\/Nuke\/image-formats"]]},"seeAlsoSections":[{"title":"Supported Images","identifiers":["doc:\/\/com.github.kean.nuke\/documentation\/Nuke\/PlatformImage","doc:\/\/com.github.kean.nuke\/documentation\/Nuke\/AssetType"],"generated":true}],"references":{"doc://com.github.kean.nuke/documentation/Nuke/ImageEncoders/Default":{"role":"symbol","title":"ImageEncoders.Default","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Default"}],"abstract":[{"type":"text","text":"A default adaptive encoder which uses best encoder available depending"},{"type":"text","text":" "},{"type":"text","text":"on the input image and its configuration."}],"identifier":"doc:\/\/com.github.kean.nuke\/documentation\/Nuke\/ImageEncoders\/Default","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Default"}],"url":"\/documentation\/nuke\/imageencoders\/default"},"https://developers.google.com/web/fundamentals/performance/optimizing-content-efficiency/replace-animated-gifs-with-video/":{"title":"short videos instead","titleInlineContent":[{"type":"text","text":"short videos instead"}],"type":"link","identifier":"https:\/\/developers.google.com\/web\/fundamentals\/performance\/optimizing-content-efficiency\/replace-animated-gifs-with-video\/","url":"https:\/\/developers.google.com\/web\/fundamentals\/performance\/optimizing-content-efficiency\/replace-animated-gifs-with-video\/"},"https://github.com/Flipboard/FLAnimatedImage":{"title":"FLAnimatedImage","titleInlineContent":[{"type":"text","text":"FLAnimatedImage"}],"type":"link","identifier":"https:\/\/github.com\/Flipboard\/FLAnimatedImage","url":"https:\/\/github.com\/Flipboard\/FLAnimatedImage"},"https://developers.google.com/speed/webp":{"title":"WebP","titleInlineContent":[{"type":"text","text":"WebP"}],"type":"link","identifier":"https:\/\/developers.google.com\/speed\/webp","url":"https:\/\/developers.google.com\/speed\/webp"},"doc://com.github.kean.nuke/documentation/Nuke/PlatformImage":{"role":"symbol","title":"PlatformImage","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"PlatformImage"}],"abstract":[{"type":"text","text":"Alias for "},{"type":"codeVoice","code":"UIImage"},{"type":"text","text":"."}],"identifier":"doc:\/\/com.github.kean.nuke\/documentation\/Nuke\/PlatformImage","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PlatformImage"}],"url":"\/documentation\/nuke\/platformimage"},"https://github.com/ryokosuge/Nuke-WebP-Plugin":{"title":"Nuke WebP Plugin","titleInlineContent":[{"type":"text","text":"Nuke WebP Plugin"}],"type":"link","identifier":"https:\/\/github.com\/ryokosuge\/Nuke-WebP-Plugin","url":"https:\/\/github.com\/ryokosuge\/Nuke-WebP-Plugin"},"https://github.com/kean/NukeDemo":{"title":"demo project","titleInlineContent":[{"type":"text","text":"demo project"}],"type":"link","identifier":"https:\/\/github.com\/kean\/NukeDemo","url":"https:\/\/github.com\/kean\/NukeDemo"},"https://github.com/SVGKit/SVGKit":{"title":"SVG","titleInlineContent":[{"type":"text","text":"SVG"}],"type":"link","identifier":"https:\/\/github.com\/SVGKit\/SVGKit","url":"https:\/\/github.com\/SVGKit\/SVGKit"},"https://github.com/kaishin/Gifu":{"title":"Gifu","titleInlineContent":[{"type":"text","text":"Gifu"}],"type":"link","identifier":"https:\/\/github.com\/kaishin\/Gifu","url":"https:\/\/github.com\/kaishin\/Gifu"},"doc://com.github.kean.nuke/documentation/Nuke/ImageDecoders/Empty":{"role":"symbol","title":"ImageDecoders.Empty","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Empty"}],"abstract":[{"type":"text","text":"A decoder that returns an empty placeholder image and attaches image"},{"type":"text","text":" "},{"type":"text","text":"data to the image container."}],"identifier":"doc:\/\/com.github.kean.nuke\/documentation\/Nuke\/ImageDecoders\/Empty","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Empty"}],"url":"\/documentation\/nuke\/imagedecoders\/empty"},"doc://com.github.kean.nuke/documentation/Nuke/ImageEncoders/Default/isHEIFPreferred":{"role":"symbol","title":"isHEIFPreferred","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"isHEIFPreferred"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Set to "},{"type":"codeVoice","code":"true"},{"type":"text","text":" to switch to HEIF when it is available on the current hardware."},{"type":"text","text":" "},{"type":"codeVoice","code":"false"},{"type":"text","text":" by default."}],"identifier":"doc:\/\/com.github.kean.nuke\/documentation\/Nuke\/ImageEncoders\/Default\/isHEIFPreferred","kind":"symbol","type":"topic","url":"\/documentation\/nuke\/imageencoders\/default\/isheifpreferred"},"doc://com.github.kean.nuke/documentation/Nuke":{"role":"collection","title":"Nuke","abstract":[{"type":"text","text":"A powerful image loading system for Apple platforms."}],"identifier":"doc:\/\/com.github.kean.nuke\/documentation\/Nuke","kind":"symbol","type":"topic","url":"\/documentation\/nuke"},"doc://com.github.kean.nuke/documentation/Nuke/ImageDecoders/Default":{"role":"symbol","title":"ImageDecoders.Default","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Default"}],"abstract":[{"type":"text","text":"A decoder that supports all of the formats natively supported by the system."}],"identifier":"doc:\/\/com.github.kean.nuke\/documentation\/Nuke\/ImageDecoders\/Default","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Default"}],"url":"\/documentation\/nuke\/imagedecoders\/default"},"https://developer.apple.com/library/archive/documentation/2DDrawing/Conceptual/DrawingPrintingiOS/LoadingImages/LoadingImages.html#//apple_ref/doc/uid/TP40010156-CH17-SW7":{"title":"natively supported","titleInlineContent":[{"type":"text","text":"natively supported"}],"type":"link","identifier":"https:\/\/developer.apple.com\/library\/archive\/documentation\/2DDrawing\/Conceptual\/DrawingPrintingiOS\/LoadingImages\/LoadingImages.html#\/\/apple_ref\/doc\/uid\/TP40010156-CH17-SW7","url":"https:\/\/developer.apple.com\/library\/archive\/documentation\/2DDrawing\/Conceptual\/DrawingPrintingiOS\/LoadingImages\/LoadingImages.html#\/\/apple_ref\/doc\/uid\/TP40010156-CH17-SW7"},"https://en.wikipedia.org/wiki/High_Efficiency_Image_File_Format":{"title":"HEIF","titleInlineContent":[{"type":"text","text":"HEIF"}],"type":"link","identifier":"https:\/\/en.wikipedia.org\/wiki\/High_Efficiency_Image_File_Format","url":"https:\/\/en.wikipedia.org\/wiki\/High_Efficiency_Image_File_Format"},"doc://com.github.kean.nuke/documentation/Nuke/ImageEncoders/ImageIO":{"role":"symbol","title":"ImageEncoders.ImageIO","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ImageIO"}],"abstract":[{"type":"text","text":"An Image I\/O based encoder."}],"identifier":"doc:\/\/com.github.kean.nuke\/documentation\/Nuke\/ImageEncoders\/ImageIO","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ImageIO"}],"url":"\/documentation\/nuke\/imageencoders\/imageio"},"doc://com.github.kean.nuke/documentation/Nuke/image-formats":{"role":"collectionGroup","title":"Image Formats","abstract":[{"type":"text","text":"Learn about image formats supported in Nuke and how to extend them."}],"identifier":"doc:\/\/com.github.kean.nuke\/documentation\/Nuke\/image-formats","kind":"article","type":"topic","url":"\/documentation\/nuke\/image-formats"},"https://github.com/mchoe/SwiftSVG":{"title":"SwiftSVG","titleInlineContent":[{"type":"text","text":"SwiftSVG"}],"type":"link","identifier":"https:\/\/github.com\/mchoe\/SwiftSVG","url":"https:\/\/github.com\/mchoe\/SwiftSVG"},"https://github.com/ryokosuge":{"title":"Ryo Kosuge","titleInlineContent":[{"type":"text","text":"Ryo Kosuge"}],"type":"link","identifier":"https:\/\/github.com\/ryokosuge","url":"https:\/\/github.com\/ryokosuge"},"doc://com.github.kean.nuke/documentation/Nuke/AssetType":{"role":"symbol","title":"AssetType","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AssetType"}],"abstract":[{"type":"text","text":"A uniform type identifier (UTI)."}],"identifier":"doc:\/\/com.github.kean.nuke\/documentation\/Nuke\/AssetType","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AssetType"}],"url":"\/documentation\/nuke\/assettype"},"doc://com.github.kean.nuke/documentation/Nuke/ImageContainer":{"role":"symbol","title":"ImageContainer","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ImageContainer"}],"abstract":[{"type":"text","text":"An image container with an image and associated metadata."}],"identifier":"doc:\/\/com.github.kean.nuke\/documentation\/Nuke\/ImageContainer","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ImageContainer"}],"url":"\/documentation\/nuke\/imagecontainer"}}}